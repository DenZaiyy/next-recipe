version: 2.1
orbs:
  node: circleci/node@5
jobs:
  # Job to run tests with jest-junit and store results to /test-results
  test-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
  # Job to build the node project and store artifacts
  build-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  # Job to auto merge to the test branch
  auto-merge-to-test:
    executor: node/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:k3XuzNyv7ANUJUUCVb+Or4RQf7/2Cmto3vui9v0nRGM"
      - run:
          name: Git config
          command: |
            git config --global user.name "$GITHUB_USER"
            git config --global user.email "$GITHUB_EMAIL"
      - run:
          name: Auto-merge dev into test
          command: |
            git fetch origin test
            git checkout test
            git reset --hard origin/test
            git merge --no-ff -m "Auto-merge from dev to test" dev || echo "Nothing to merge"
            git push origin test
  # Job to deploy the project on staging (vercel in this case)
  deploy-staging:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install -g vercel
      - run:
          name: Deploy to Vercel
          command: vercel deploy --target=staging --token=$VERCEL_TOKEN
workflows:
  merge-dev-to-test:
    jobs:
      - test-node:
          filters:
            branches:
              only: dev
      - auto-merge-to-test:
          requires:
            - test-node
          filters:
            branches:
              only: dev
  ci-on-test:
    jobs:
      - test-node:
          filters:
            branches:
              only: test
      - build-node:
          requires:
            - test-node
          filters:
            branches:
              only: test
      - deploy-staging:
          requires:
            - build-node
          filters:
            branches:
              only: test
